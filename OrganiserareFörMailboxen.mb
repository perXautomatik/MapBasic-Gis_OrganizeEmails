Include "MapBasic.def"
include "C:\Users\crbk01\OneDrive - Region Gotland\Till Github\Mapinfo\CommonLib\commonLib1.def"

Declare Sub Main
Declare Sub GenerateRessultMailsNoObj

declare sub generateGkFasIndex
declare sub generateÄrDisNrSwerBet 
declare sub printToFile(byVal tableName as string,byVal pathString as string)
declare sub presentation()
declare sub localtableOpener
declare sub GenerateMailsWithFaObjects
declare sub cleanup
declare sub groupBy(byVal tableName as string, byVal kolumnNamn as string)
declare sub Add_rowid(ByVal tableName as string)
declare sub tableColumnAsArray(byVal tableName as string, byVal kolumnNamn as string,array() as integer)
declare sub progressor()
declare sub LegacyGenerateRessultMailsNoObj
declare sub genereraNaturskyddslager
declare sub UpdateRessultMailsNoObj 
declare sub generateResTabWithObj
declare sub generateToExport	
declare sub CorrectGenObjFaWithSweref
declare sub generateSwerefNrOnFa


Global startTime,iprogressRange,iprogress as integer
,debugg as logical


Sub Main()
	debugg = false
	startTime = timer()
	iprogressRange = 11
	iprogress = 0	
ProgressBar "Arbetar... dags att hämta Te"
	     Calling progressor
	'call progressor
Range iProgressRange

exit sub
	printErrorNr:
	call increment(iProgress,iProgressRange,starttime) 'err()
		end program
End Sub

sub progressor()
	do case iProgress
		case 1
			call localtableOpener
		case 2
			call GenerateRessultMailsNoObj '@RessultMailsNoObj OutlookExport
		case 3
			call CorrectGenObjFaWithSweref 'korrigera GenerateRessultMailsNoObj där det saknad fastighetMedSweref GenObjFaWithSweref
			call GenerateMailsWithFaObjects 'adds faIndex @MailsWithFaObjects from RessultMailsNoObj, FaNoSkift  and fastighet <> "" 
			call generateSwerefNrOnFa
		case 4
			call generateGkFasIndex '@GkFasIndex MailsWithFaObjects,NatMedFas
		case 5
			call generateÄrDisNrSwerBet 'nrKvFlaggot och distrikt @ÄrDisNrSwerBet  from MailsWithFaObjects, distriktsindelning
		case 6
			call UpdateRessultMailsNoObj 
							'RessultMailsNoObj 
								'kvFlaggorIsocken,distrikt ÄrDisNrSwerBet antalSweref
								'NaturStatus GkFasIndex bedömning
								'anteckning fastigheter_sweref 				
		case 7
			call generateResTabWithObj 'ResTabWithObj
		case 8
			call genereraNaturskyddslager '@Natur... GkFasIndex 
		case 9
			call presentation	
		case 10
			call generateToExport '@ToExport RessultMailsNoObj
		case 11
			call cleanUp
	end case
			
	call increment(iProgress,iProgressRange,starttime)
end sub

sub generateSwerefNrOnFa
	Select MailsWithFaObjects.EntryID, Fastigheter_Sweref.Anteckning from Fastigheter_Sweref, MailsWithFaObjects where Fastigheter_Sweref.obj Within MailsWithFaObjects.obj into SwerefNrOnFa
end sub

sub CorrectGenObjFaWithSweref
		
	select * from RessultMailsNoObj 
		where RessultMailsNoObj.fastighet = ""
	into swerefFaKorrigerad 
		Add Column "swerefFaKorrigerad" (fastighet) 
			From Fastigheter_Sweref Set To fastighet Where rtrim$(ärendenr) = ärendenr

End Sub

Sub GenerateRessultMailsNoObj
	Dim printMessage,tempPath,tempstring As String
	,nrOfSlices,I,RowTwoLenght as integer
	,tempObject as Object
	
	'******************* no overwrite ****************************
	
	Register Table "C:\Users\crbk01\Desktop\Ansökningar, ej sorterade.txt" TYPE ASCII Delimiter 126 Charset "WindowsLatin1" Into applicationDirectory$() & "\OutlookExport.TAB"
	Open Table applicationDirectory$() & "\OutlookExport.TAB" Interactive
	
	tempPath = createTemporaryTableAndOpen("""RessultMailsNoObj"" (ärendenr Char(15),EntryID Char(5),fastighet char(50),kvFlaggorIsocken integer,NaturStatus Char(40),distrikt Char(40),anteckning Char(254),key char (190))")
	
	Insert Into RessultMailsNoObj (ärendenr,fastighet,key,EntryId) Select COl2,COL3,COl1,left$(right$(COl1,9),5)
	From OutlookExport DropIndex Auto
	commit table RessultMailsNoObj
End Sub

sub generateResTabWithObj
	Select RessultMailsNoObj.ärendenr,
		RessultMailsNoObj.anteckning, 
		RessultMailsNoObj.kvFlaggorIsocken,
		RessultMailsNoObj.NaturStatus, 
		RessultMailsNoObj.distrikt,
		RessultMailsNoObj.fastighet, 
		RessultMailsNoObj.EntryID,
		FaNoSkift._rowid "_rowid", 
		FaNoSkift.obj
	from RessultMailsNoObj,FaNoSkift
	where FaNoSkift.KIR = RessultMailsNoObj.fastighet 
	into ResTabWithObj
	call görTillBasTabell("ResTabWithObj")
end sub

sub UpdateRessultMailsNoObj 
	Add Column "RessultMailsNoObj" (kvFlaggorIsocken)From ÄrDisNrSwerBet Set To antalSweref Where COL2 = COL1
	Add Column "RessultMailsNoObj" (distrikt)From ÄrDisNrSwerBet Set To distrikt Where COL2 = COL1 
	Add Column "RessultMailsNoObj" (NaturStatus )From GkFasIndex Set To bedömning Where COL2 = COL1 
	Add Column "RessultMailsNoObj" (anteckning)From SwerefNrOnFa Set To Anteckning Where COL2 = COL1 
	commit table RessultMailsNoObj
End Sub

sub genereraNaturskyddslager
	
	dim x,num_tables as integer
	,tempstrings,query as string
	x=1 fetch first from GkFasIndex
		do until EOT(GkFasIndex)
			
			num_tables = GkFasIndex._rowid
			
			query = "select * from ResTabWithObj where ResTabWithObj._rowid = " & num_Tables & "into tempTable" 
			num_tables = numTables()
			
			run command query
			
			query = TempFileName$("")
			
			commit table tempTable as query close table tempTable open table query as "Natur" & x
			
			if numTables() <> num_tables then
				x=x+1
				fetch next from GkFasIndex
			end if	
		loop		
End sub

sub tableColumnAsArray(byVal tableName as string, byVal kolumnNamn as string,array() as integer)
	
	dim i as integer
	, utvald,tempAlias2 as alias
	
	utvald = tableName
	
	fetch first from utvald
	do until eot(utvald)
		i = i +1
		redim array(i)
		OnError goto NoSuchKolumnError
		tempAlias2 = tableName & "." & kolumnNamn
		array(i) = tempAlias2
		OnError goto 0
		
		if false then
			NoSuchKolumnError:
		print error$()
		End If

		fetch next from utvald
	loop
		
End Sub

sub Add_rowid(ByVal TabLeThatWillBeReSavedAsTemp as string)
	
	dim q,x as integer
	, found as logical
	, tempString as string
	, tempAlias as alias
	found = false
	tempString = "_rowid"
	tempAlias = TabLeThatWillBeReSavedAsTemp
		
	for x = 1 to tableInfo(tempAlias, 4)
		if(tempString = Columninfo(tempAlias,"COl"& x,1)) then
			found = true
			goto endOFLoop
		else
			found = false
		end if
	next
	endOfLoop:
	
	
	if not(found) then
		Add Column TabLeThatWillBeReSavedAsTemp (_rowid integer) from tempAlias set To rowid
	end if
		
	call görTillBasTabell(TabLeThatWillBeReSavedAsTemp)
	
end sub

sub GenerateMailsWithFaObjects
	Commit Table RessultMailsNoObj
	Alter Table "RessultMailsNoObj" ( add tomtHeltal Integer )
	
Select RessultMailsNoObj.ärendenr,
  RessultMailsNoObj.fastighet, 
  RessultMailsNoObj.EntryID,
  _rowid from 
  RessultMailsNoObj, 
  FaNoSkift 
  where FaNoSkift.KIR like "%" & RessultMailsNoObj.fastighet AND RessultMailsNoObj.tomtHeltal = FaNoSkift.tomtHeltal

	into MailsWithFaObjects

		
		
	if TableInfo(MailsWithFaObjects,TAB_INFO_NROWS) <> TableInfo(RessultMailsNoObj,TAB_INFO_NROWS) then
		print "[Error] different size of input and output table"
		debugg = true
	end if
	
	call görTillBasTabell("MailsWithFaObjects")
end sub

sub presentation()
	dim commandstring as string
	,NrNaturSkydd,i,y as integer
	NrNaturSkydd = 0
	browse * from ResTabWithObj
	
	Dim nWindowID As Integer
	
	commandstring = "Map From NaturreservatGtlkusten_NVK"
	For i = 1 to NumTables()
		if like(Tableinfo(i, TAB_INFO_NAME), "Natur_","") then
	    	commandstring = commandstring & "," & Tableinfo(i, TAB_INFO_NAME)
	    	NrNaturSkydd = NrNaturSkydd+1
	   	end if
	Next
	commandstring = commandstring & ",FaNoSkift"
		
'	print commandstring
	
	run command commandstring
	nWindowID = FrontWindow()
	
	
	Set Window nWindowID Enhanced On
	Set Window nWindowID Front
	
	set Map window nWindowID layer 1 Alpha 99 
	Set Map Window nWindowID Order Layers 1 DestGroupLayer 0 
	'Set Map Window nWindowID Order Layers 2 DestGroupLayer 0 Position NrNaturSkydd+2
	Set Map Window nWindowID Layer NrNaturSkydd+2 Display Global Global Pen (1,2,0) Global Brush (2,16777215,16777215)  
	
	dim fastighet as string
	,tempAlias as alias
	
	for i = 1 to NrNaturSkydd
		
		tempAlias = "Natur"&i
		select COl6 from tempAlias into temp
		fetch first from temp
		fastighet = temp.COl1
		
		y = i+1 
		Set Map Window nWindowID Layer y Display Global 
		Set Map Window nWindowID Layer y Global Pen (1,2,0)
		Set Map Window nWindowID Layer y Global Brush (2,65280,16777215)
		Set Map Window nWindowID Layer y FriendlyName fastighet
	next
	
end sub

sub groupBy(byVal tableNameWhoHasTHe_RowidCOlumn as string, byVal kolumnNamn as string)

	dim tempAlias,tempAlias2 as string
	tempAlias = tableNameWhoHasTHe_RowidCOlumn
	tempAlias2 = kolumnNamn
'	run command ("Create Index On " & tableNameWhoHasTHe_RowidCOlumn & "(" & kolumnNamn & ")")
	call updateIndex(tableNameWhoHasTHe_RowidCOlumn)
	'run command ("Create Index On " & tableNameWhoHasTHe_RowidCOlumn & "(_rowid)")

	select * from tableNameWhoHasTHe_RowidCOlumn group by tempAlias2 into tabellUtanGrafik
	call görTillbastabell(tabellUtanGrafik)
	
	'end program

	run command ("select " & getColumnsOfTable_asString(tableNameWhoHasTHe_RowidCOlumn) & " from " & tableNameWhoHasTHe_RowidCOlumn & ",tabellUtanGrafik where " & tableNameWhoHasTHe_RowidCOlumn & "._rowid = tabellUtanGrafik._rowid  into withGrafik")

	'select * from tableNameWhoHasTHe_RowidCOlumn where _rowid  = any (select _rowid from tabellUtanGrafik) into withGrafik
	
	call görTillBastabell("withGrafik")
	close table tableNameWhoHasTHe_RowidCOlumn
	close table tabellUtanGrafik
	select * from withGrafik into tableNameWhoHasTHe_RowidCOlumn
	call görTillBastabell(tableNameWhoHasTHe_RowidCOlumn) run command ("Create Index On " & tableNameWhoHasTHe_RowidCOlumn & "(" & kolumnNamn & ")") 
	commit table tableNameWhoHasTHe_RowidCOlumn
	close table withGrafik
	
End Sub

sub LegacyGenerateRessultMailsNoObj
	Dim printMessage,tempPath,tempstring As String
	,nrOfSlices,I,RowTwoLenght as integer
	,tempObject as Object
	
	tempstring = "ResTabWithObj"
	if not(TableIsNotOpen(tempstring)) then
		note "saving to file"
		commit table ResTabWithObj
		call printToFile(tempstring,appDir + "OutlookExport.txt")
		close table ResTabWithObj
	end if

	Register Table appDir & "\OutlookExport.txt"  TYPE ASCII Delimiter 9 Charset "WindowsLatin1" Into appDir & "\OutlookExport.TAB"
	Open Table appDir & "\OutlookExport.TAB" Interactive
	
	
	tempPath = createTemporaryTableAndOpen("""RessultMailsNoObj"" (ärendenr Char(13),fastighet char(50),EntryID Char(150),distrikt Char(40),antalSweref integer)")

	Select * from OutlookExport 
		where (_COL1 like "%MBNV%" OR _COL1 like "%mhn%")			
				or 
				(((_COL2 like "%mhn%") OR (_COL2 like "%MBNV%")) and (not ( _COL2 = "registrator-mhn@gotland.se" )))
			
			into RaderMedMHN
	
	call görTillBasTabell("RaderMedMHN")

	Fetch First From RaderMedMHN
	Do Until EOT(RaderMedMHN)
		dim mhnArray(0),columnsMerged,fastighetsArray(0),insertValue,insertValue2,fastighet as string
		, nrOfPotentialFastigheter,pos as integer
		
		insertValue = ""
		insertValue2 = ""
		fastighet = ""
	
		nrOfPotentialFastigheter = 0
	
		columnsMerged = RaderMedMHN.col1 + " " + RaderMedMHN.col2 'merge col1&col2
		
		nrOfSlices = SplitStringAtCharacter(columnsMerged," ",mhnArray)
		nrOfPotentialFastigheter = SplitStringAtCharacter(columnsMerged,", ",fastighetsArray)
		
		if(nrOfPotentialFastigheter > 1) then
			dim  j as integer
			
			for j = 1 to nrOfPotentialFastigheter
				if StringContains(fastighetsArray(j), ":") and not(StringContains(fastighetsArray(j), "Ämne:")) then
					fastighet = fastighetsArray(j)
				end if	
			Next
			
			if(left$(fastighet,1) = " ") then 'fastighetsextrahering
				fastighet = right$(fastighet,len(fastighet)-1)
			end if
			
			pos = InStr(1,fastighet,"Nytt ")	
			if (pos > 0) then
				fastighet = Mid$(fastighet,1,pos-1)			
			end if				
		end if
		
		For I=1 to nrOfSlices
			Dim TempBoolean as logical
	
			TempBoolean = StringContains(mhnArray(I), "MBNV") AND ( 'logical validation: if line contain mhn and number
					 StringContains(mhnArray(I), "0") OR
					 StringContains(mhnArray(I), "1") OR
					 StringContains(mhnArray(I), "2") OR
					 StringContains(mhnArray(I), "3") OR
					 StringContains(mhnArray(I), "4") OR
					 StringContains(mhnArray(I), "5") OR
					 StringContains(mhnArray(I), "6") OR
					 StringContains(mhnArray(I), "7") OR
					 StringContains(mhnArray(I), "8") OR
					 StringContains(mhnArray(I), "9")
				 ) OR
				 StringContains(mhnArray(I), "MHN") AND ( 'logical validation: if line contain mhn and number
					 StringContains(mhnArray(I), "0") OR
					 StringContains(mhnArray(I), "1") OR
					 StringContains(mhnArray(I), "2") OR
					 StringContains(mhnArray(I), "3") OR
					 StringContains(mhnArray(I), "4") OR
					 StringContains(mhnArray(I), "5") OR
					 StringContains(mhnArray(I), "6") OR
					 StringContains(mhnArray(I), "7") OR
					 StringContains(mhnArray(I), "8") OR
					 StringContains(mhnArray(I), "9")
				 )
			 
			 if TempBoolean then
			 	dim år,diarie,ärendeDelar() as string
			 	,delar as integer
			 	
			 	delar = SplitStringAtCharacter(mhnArray(I),"-",ärendeDelar)
				if(delar = 3) then
					insertValue = ärendeDelar(1) & " " & val(ärendeDelar(2)) & "/" & val(ärendeDelar(3))		
					insertvalue2 = mhnArray(I)
				else
					insertValue = ""
				end if
			end if
		Next
		
		if(insertValue <> "") then
			if(fastighet <> "") then
				insert into RessultMailsNoObj values (insertValue,fastighet,insertValue2) 			
			elseif(fastighet = "") then
				insert into RessultMailsNoObj (ärendenr,EntryID) values (insertValue,insertValue2) 
			end if
		end if
		
		redim fastighetsArray(0)
		redim mhnArray(0)
		
		Fetch Next From RaderMedMHN
	Loop	

end Sub

sub printToFile(byVal tableName as string,byVal pathString as string)

	Select fastighet,EntryID From tableName Into my_query
	Open file pathString For Output As #1
	Fetch First From my_query
	Do While Not EOT(my_query)'The Write #1 statement will automatically add commas between fields. If you don't want this then use Print #1.
		
	Print #1, "	" & my_query.Col2 & ", " & my_query.Col1
    	
    	Fetch Next From my_query
Loop
Close File #1
End Sub

sub localtableOpener

	dim tempstring as String

	tempstring = "G:\sbf\Livsmiljö\Gemensamt\mapbasic program projekt\skikt\Vanliga Tabfiler\"
	
	open table tempstring + "NaturreservatMedFastighet.tab" as NatMedFas
	Open Table tempstring + "distriktsindelning.TAB"
	Open Table tempstring + "\NaturreservatGtlkusten_NVK.TAB" 'as visiual aid mapp
	Open Table tempstring + "\FastighetUtanSkifte.TAB" as FaNoSkift 

	tempstring = "G:\sbf\Livsmiljö\Miljö- och hälsoskydd\Vatten\Avlopp\Klart Vatten\"
	Open Table tempstring + "Fastigheter\GIS\Fastigheter_Sweref.TAB"
	
	
	'open table "K:\KARTOR\LANTMÄTERIET\FASTIGHETSKARTAN\Fastighet_yta.TAB" as Fastighet_ytaORg

	call add_rowId("FaNoSkift") 
	
'	tempstring = createTemporaryTableAndOpen("""RessultMailsNoObj"" (ärendenr Char(14),kvFlaggorIsocken integer,NaturStatus Char(40),distrikt Char(40),anteckning Char(254),fastighet char (50),EntryId Char(150))")	
end sub

sub generateGkFasIndex
	
	Select EntryID,bedömning,_rowid
	from MailsWithFaObjects,NatMedFas
	where NatMedFas.kir = MailsWithFaObjects.fastighet
	into GkFasIndex
	
End Sub

sub generateÄrDisNrSwerBet
	
	Add Column "distriktsindelning" (antalSweref )From Fastigheter_Sweref Set To Count(*) Where within

	Select EntryID,antalSweref,distrikt
	from MailsWithFaObjects, distriktsindelning 
	where MailsWithFaObjects.Obj Within distriktsindelning.Obj
	group by EntryID into ÄrDisNrSwerBet 

End Sub

sub cleanUp

	if not(debugg) then
		close table ÄrDisNrSwerBet
		Close Table Fastigheter_Sweref
		close table GkFasIndex
		close table NatMedFas
		
		close table distriktsindelning
		close table FaNoSkift 
		close table OutlookExport
		close table RessultMailsNoObj
		close table MailsWithFaObjects
		close table swerefFaKorrigerad
	end if
end sub

sub generateToExport

	Select key, iif(distrikt <> "",iif(NaturStatus="",iif((kvFlaggorIsocken>10),iif(distrikt="söder",1,iif(distrikt="norra",2,(IIF(DISTRIKT="MELLERSTA",3,0)))),5),6),0) "värde" from RessultMailsNoObj into ToExport
	Export "ToExport" Into "C:\Users\crbk01\Desktop\ToExport.csv" Type "ASCII" Delimiter "," CharSet "WindowsLatin1"	

end sub
