Include "MapBasic.def"
include "C:\Users\crbk01\OneDrive - Region Gotland\Till Github\Mapinfo\organiserarFörMailboxen\commonLib\commonLib1.def"

Declare Sub Main
declare sub progressor()

declare function Add_rowid(ByVal tableName as string) as logical

declare sub dedupeIntoTemp(byVal tableName as string, byVal kolumnNamn as string)
declare sub printToFile(byVal tableName as string,byVal pathString as string)
declare sub tableColumnAsArray(byVal tableName as string, byVal kolumnNamn as string,array() as integer)
declare sub renameTablesWithColumn(byVal enumeratedTablePrefix as string, byVal columnName as string)


declare sub do1_LocaltableOpener
Declare Sub do2_GenResMailsNoObj
declare sub do3_UpdNoFaWithSweref
declare sub do4_GenMailsWiFaObjs
declare sub do5_GenSwerefNrOnFa
declare sub do6_AltResMailsNoObj 
declare sub do5_GenArDisNrSwerBet 
declare sub do5_GenGkFasInx
declare sub do7_GenResWithObj
declare sub do8_GenNaturskyd
declare sub do9_Presentation
declare sub do10_GenToExport	
declare sub do11_CleanUp



Global iStartTime,iprogressRange,iprogress as integer
,lDebugg as logical
,tablePath as string

'todo: split into separate modules for naturReservat and Sweref count
'todo: find bug whom ressult in faulty sorting, does not ressult in errorhandling
'Todo: Compensate for obeus duplicates
'	? Mark dupes so they're seperatly sorted, as mails
'Todo: change table names to Follow namingconvention mentioned at https://gis.stackexchange.com/a/231721
'change: Hungarian~ notation, i for integer, s for string, x for double f for float tbl for table
'camelCase
'dorm prefix of methods being run in the progressbar.
'important to not make methodnamesTo long
'should methods which alters tables have a certain naming convention? for example (alt)tableName what about multitableAlteration? mAlt?
'should methods that generate tables be called something? for example (gen)tableName, what about multitableGeneration? mGen?
'that a table has geoData or not.... wObj/nObj? as sufix
'old convention with @ seemed bit to confusing
'should i use Gen as a sufix rather for the sake of allowing reverseSorting
'executionOrder in methodnamesOfdorm? example do1,do2,do3
'Todo: consider execution unstoppable or stoppable exectuion, subs can be stopped, function can not.
'Todo: find preformance bottlenecks, connected to lDebugg variable
'Todo: trim whitespaces before changing 
'Todo: Colx translator
'Todo: split naturreservat fastigheter into shifts
'Todo: do not generate Duplicate Maps 
'Todo: include byggnader into naturreservat fastigheter

Sub Main()
	lDebugg = true
	iStartTime = timer()
	iprogressRange = 11
	iprogress = 0	
	tablePath = "C:\Users\crbk01\OneDrive - Region Gotland\To Vision, GDPR cleanup\MapInfoTables\skikt\Vanliga Tabfiler\"
ProgressBar "Arbetar... dags att hämta Te"
	     Calling progressor
Range iProgressRange

End Sub

sub progressor()
	do case iProgress
		case 1
			call do1_LocaltableOpener
		case 2
			call do2_GenResMailsNoObj 'tbl_RessultMailsNoObj OutlookExport
		case 3
			call do3_UpdNoFaWithSweref 'korrigera do2_GenResMailsNoObj där det saknad fastighetMedSweref GenObjFaWithSweref
			call do4_GenMailsWiFaObjs 'adds faIndex tbl_MailsWithFaObjects from tbl_RessultMailsNoObj, tbl_FaNoSkift  and tbl_fastighet <> "" 
		case 4
			call do5_GenGkFasInx 'tbl_GkFasIndex MailsWithFaObjects,NatMedFas
		case 5
			call do5_GenArDisNrSwerBet 'nrKvFlaggot och distrikt tbl_ÄrDisNrSwerBet  from tbl_MailsWithFaObjects, tbl_distriktsindelning
		case 6
			call do6_AltResMailsNoObj 
							'RessultMailsNoObj 
								'kvFlaggorIsocken,distrikt ÄrDisNrSwerBet antalSweref
								'NaturStatus GkFasIndex bedömning
								'anteckning fastigheter_sweref 				
		case 7
			call do7_GenResWithObj 'ResTabWithObj
		case 8
			call do8_GenNaturskyd '@Natur... GkFasIndex 
		case 9
			call do9_Presentation	
		case 10
			call do10_GenToExport '@ToExport RessultMailsNoObj
		case 11
			call do11_CleanUp
	end case
			
	call increment(iProgress,iProgressRange,iStartTime)
end sub




sub do1_LocaltableOpener
	'todo: error handling on unable to open table
	
	open table tablePath + "NaturreservatMedFastighet.tab" as NatMedFas
	Open Table tablePath + "distriktsindelning.TAB"
	Open Table tablePath + "\NaturreservatGtlkusten_NVK.TAB" 'as visiual aid mapp
	Open Table tablePath + "\FastighetUtanSkifte.TAB" as FaNoSkift 

	Open Table "G:\sbf\Livsmiljö\Miljö- och hälsoskydd\Vatten\Avlopp\Klart Vatten\" + "Fastigheter\GIS\Fastigheter_Sweref.TAB"
	
	dim cantStopFunctionVariable as logical cantStopFunctionVariable = add_rowId("FaNoSkift")
end sub

Sub do2_GenResMailsNoObj
	'todo: error handling on uable to create table
	'todo: checkt that tableTransfere was flawless.
	'todo: should throw error case EntryId is not unique
	'could generate the table again with longer EntryID char value unitill they're unique.
	
	Dim printMessage,tempPath,tempstring As String ,nrOfSlices,I,RowTwoLenght as integer ,tempObject as Object
	
	Register Table "C:\Users\crbk01\Desktop\Ansökningar, ej sorterade.txt" TYPE ASCII Delimiter 126 Charset "WindowsLatin1" Into applicationDirectory$() & "\OutlookExport.TAB"
	Open Table applicationDirectory$() & "\OutlookExport.TAB" Interactive
	
	tempPath = createTemporaryTableAndOpen("""RessultMailsNoObj"" (ärendenr Char(15),EntryID Char(5),fastighet char(50),kvFlaggorIsocken integer,NaturStatus Char(40),distrikt Char(40),anteckning Char(254),key char (190))")
	
	Insert Into RessultMailsNoObj (ärendenr,fastighet,key,EntryId) Select COl2,COL3,COl1,left$(right$(COl1,9),5)
	From OutlookExport DropIndex Auto
	commit table RessultMailsNoObj
	
End Sub

sub do3_UpdNoFaWithSweref
	'finds Ärendenr whom has no fastighet
	'updates column of fastighet if there ärendenr can be found 
	'someWhat obsolite today as most old ärendenr doesn't correspond to there vision nr due to mbhn
	select * from RessultMailsNoObj 
		where RessultMailsNoObj.fastighet = ""
	into swerefFaKorrigerad 
		Add Column "swerefFaKorrigerad" (fastighet) 
			From Fastigheter_Sweref Set To fastighet Where rtrim$(ärendenr) = ärendenr
	
	Commit Table RessultMailsNoObj

End Sub

sub do4_GenMailsWiFaObjs
	'generate a table with the fastighetsbeteckningar that's in the inputlist, out of the fastighetstable; MailsWithFaObjects
	'*.inputlist,FaNoSkift._rowid,FaNoSkift.obj
	'must be a join for the sake of getting the Geoinfo
	'shouldProbably groupTable before we assign astighetsObj.. discards mails that has same fastighet... maybe not that good
	
	Alter Table "RessultMailsNoObj" ( add tomtHeltal Integer ) 'way to sneak around mapbasics inability to make anything than inner joins
			
	Select RessultMailsNoObj.ärendenr,RessultMailsNoObj.fastighet,RessultMailsNoObj.EntryID,FaNoSkift._rowid from
  	RessultMailsNoObj,FaNoSkift 
  	where FaNoSkift.KIR like "%" & RessultMailsNoObj.fastighet
  		AND RessultMailsNoObj.tomtHeltal = FaNoSkift.tomtHeltal
	into MailsWithFaObjects 
			
	if TableInfo(MailsWithFaObjects,TAB_INFO_NROWS) <> TableInfo(RessultMailsNoObj,TAB_INFO_NROWS) then 'crued error check method, 
		print "[Error] different size of input and output table, Debugg turned 'True'"
		lDebugg = true
	end if
		
	call görTillBasTabell("MailsWithFaObjects")
end sub

sub do5_GenGkFasInx
	'generates a KVish table, with EntryId(key), bedömning (val), _rowId (key)
	'through a join between the tables NatWithFas and MailsWithObj
	
	Select EntryID,bedömning,_rowid
	from MailsWithFaObjects,NatMedFas
	where NatMedFas.kir = MailsWithFaObjects.fastighet
	into GkFasIndex
	
End Sub

sub do5_GenArDisNrSwerBet
	'generates a KVish table with EntryId(key), antalSweref (val), district (val)
	'don't know if i like the aproach of altering district table for the sake of getting the count right
	'think i'd rather generate a table for that
	'need to create another table to count the flaggs, feels like this is a safer method though
	'the ressulting table doesn't need any geoInfo
	
	dim tempPath as string tempPath = createTemporaryTableAndOpen("""ÄrDisNrSwerBet"" (EntryID Char(5),antalSweref Integer,distrikt Char(50))")  
	tempPath = createTemporaryTableAndOpen("""KV_SockNrSweref"" (Socken Char(50),antalSweref Integer)")  
	tempPath = createTemporaryTableAndOpen("""KV_FastSwerefAntec"" (fastighet Char(50),anteckning Char(256))")  
	
	Create Map For KV_SockNrSweref CoordSys Earth Projection 1, 104
	Create Map For KV_FastSwerefAntec CoordSys Earth Projection 1, 104
	Create Map For ÄrDisNrSwerBet CoordSys Earth Projection 1, 104
	
	Insert Into KV_FastSwerefAntec (COL1) Select COL2 from MailsWithFaObjects
	Add Column "KV_FastSwerefAntec" (anteckning)From Fastigheter_Sweref Set To anteckning Where within 'flaggor som finns specifict på fastigheten
	
	
	Insert Into KV_SockNrSweref (Socken) Select Socken From distriktsindelning
	Add Column "KV_SockNrSweref" (antalSweref)From Fastigheter_Sweref Set To Count(*) Where within 'flaggor som finns specifickt på socknen.
	
	Insert Into ÄrDisNrSwerBet (EntryID) Select EntryID From MailsWithFaObjects
	
	select EntryID,distrikt from distriktsindelning,MailsWithFaObjects where distriktsindelning.Obj contains MailsWithFaObjects.Obj into relevantDistrict
	Add Column "ÄrDisNrSwerBet" (distrikt)From relevantDistrict Set To distrikt Where Col1 = Col1
		
	Add Column "ÄrDisNrSwerBet" (antalSweref)From KV_SockNrSweref Set To antalSweref Where contains
	
	commit table ÄrDisNrSwerBet
	Create Index On ÄrDisNrSwerBet (EntryID)
	
End Sub

sub do6_AltResMailsNoObj 
	'populates rather than alter, wonder why i chose to do it like this rather than joining two tables,
	'besides wasn't there a mails with objects earlier? as i remmeber it, there were some design choise for the sake
	'of the naturvärdes parts, 
	Add Column "RessultMailsNoObj" (kvFlaggorIsocken)From ÄrDisNrSwerBet Set To antalSweref Where COL2 = COL1
	Add Column "RessultMailsNoObj" (distrikt)From ÄrDisNrSwerBet Set To distrikt Where COL2 = COL1 
	Add Column "RessultMailsNoObj" (NaturStatus )From GkFasIndex Set To bedömning Where COL2 = COL1 
	Add Column "RessultMailsNoObj" (anteckning)From KV_FastSwerefAntec Set To Anteckning Where COL2 = COL1 
	commit table RessultMailsNoObj
End Sub

sub do7_GenResWithObj
	'simple join, and then dumps it into a named temptable
	Select RessultMailsNoObj.ärendenr,
		RessultMailsNoObj.anteckning, 
		RessultMailsNoObj.kvFlaggorIsocken,
		RessultMailsNoObj.NaturStatus, 
		RessultMailsNoObj.distrikt,
		RessultMailsNoObj.fastighet, 
		RessultMailsNoObj.EntryID,
		FaNoSkift._rowid "_rowid", 
		FaNoSkift.obj
	from RessultMailsNoObj,FaNoSkift
	where FaNoSkift.KIR = RessultMailsNoObj.fastighet 
	into ResTabWithObj
	call görTillBasTabell("ResTabWithObj")
end sub

sub do8_GenNaturskyd
	'method loops through the list of fastigheter,
	'creates a new table containing one row for each entry, 
	'todo: why not one query per row instead of one table per entry
	'todo: why not a join with the ressult table so one sees what one selects?
	'GkFasIndex, is a kv table as i remmeber, with rowNumber and fastighetsNamn
	
	dim x,num_tables as integer,tempstrings,query as string
	x=1 fetch first from GkFasIndex
		do until EOT(GkFasIndex)
			
			num_tables = GkFasIndex._rowid
			
			query = "select * from ResTabWithObj where ResTabWithObj._rowid = " & num_Tables & "into tempTable" 
			num_tables = numTables()
			
			run command query
			
			query = TempFileName$("")
			
			commit table tempTable as query close table tempTable open table query as "Natur" & x
			
			if numTables() <> num_tables then
				x=x+1
				fetch next from GkFasIndex
			end if	
		loop		
End sub

sub do9_Presentation
	dim commandstring as string
	,NrNaturSkydd,i as integer
	NrNaturSkydd = 0
	
	
	Dim nWindowID As Integer
	
	commandstring = "Map From NaturreservatGtlkusten_NVK"
	For i = 1 to NumTables()
		if like(Tableinfo(i, TAB_INFO_NAME), "Natur_","") then
	    	commandstring = commandstring & "," & Tableinfo(i, TAB_INFO_NAME)
	    	NrNaturSkydd = NrNaturSkydd+1
	   	end if
	Next
	commandstring = commandstring & ",FaNoSkift"
	
	if lDebugg then
		print commandstring
	end if
	
	run command commandstring
	nWindowID = FrontWindow()
	
	Set Window nWindowID Enhanced On
	Set Window nWindowID Front
	
	set Map window nWindowID layer 1 Alpha 99 
	Set Map Window nWindowID Order Layers 1 DestGroupLayer 0 
	Set Map Window nWindowID Layer NrNaturSkydd+2 Display Global Global Pen (1,2,0) Global Brush (2,16777215,16777215)  
	
	call renameTablesWithColumn("Natur","COl6")
	
	browse * from ResTabWithObj
	
end sub

sub do10_GenToExport

	Select key, iif(distrikt <> "",iif(NaturStatus="",iif((kvFlaggorIsocken>10),iif(distrikt="söder",1,iif(distrikt="norra",2,(IIF(DISTRIKT="MELLERSTA",3,0)))),5),6),0) "värde" from RessultMailsNoObj into ToExport
	Export "ToExport" Into "C:\Users\crbk01\Desktop\ToExport.csv" Type "ASCII" Delimiter "," CharSet "WindowsLatin1"	

end sub

sub renameTablesWithColumn(byVal enumeratedTablePrefix as string, byVal columnName as string)
	dim fastighet as string
	,tempAlias as alias
	,i,y as integer
	
	for i = 1 to NrNaturSkydd
		
		tempAlias = enumeratedTablePrefix & i
		run command "select " & columnName & " from  " & tempAlias & " into newTableName"
		
		fetch first from newTableName
		fastighet = newTableName.COl1
		
		y = i+1 
		Set Map Window nWindowID Layer y Display Global 
		Set Map Window nWindowID Layer y Global Pen (1,2,0)
		Set Map Window nWindowID Layer y Global Brush (2,65280,16777215)
		Set Map Window nWindowID Layer y FriendlyName fastighet
	next
end sub

sub do11_CleanUp

	if not(lDebugg) then
		close table ÄrDisNrSwerBet
		Close Table Fastigheter_Sweref
		close table GkFasIndex
		close table NatMedFas
		
		close table distriktsindelning
		close table FaNoSkift 
		close table OutlookExport
		close table RessultMailsNoObj
		close table MailsWithFaObjects
		close table swerefFaKorrigerad
	end if
end sub



sub tableColumnAsArray(byVal tableName as string, byVal kolumnNamn as string,array() as integer)
	'feels like a genereral enough method to add to CommonMethods
	dim i as integer
	, utvald,tempAlias2 as alias
	
	utvald = tableName
	
	fetch first from utvald
	do until eot(utvald)
		i = i +1
		redim array(i)
		OnError goto NoSuchKolumnError
		tempAlias2 = tableName & "." & kolumnNamn
		array(i) = tempAlias2
		OnError goto 0
		
		if false then
			NoSuchKolumnError:
		print error$()
		End If

		fetch next from utvald
	loop
		
End Sub

function Add_rowid(ByVal TabLeThatWillBeReSavedAsTemp as string) as logical
	'todo: change syntax for if found then end, gotta be more elegant ways to do this
	dim q,
	x as integer,
	found as logical,
	tempString as string,
	tempAlias as alias
	
	found = false
	tempString = "_rowid"
	tempAlias = TabLeThatWillBeReSavedAsTemp
		
	for x = 1 to tableInfo(tempAlias, 4)
		if(tempString = Columninfo(tempAlias,"COl"& x,1)) then
			found = true
			goto endOFLoop
		else
			found = false
		end if
	next
	endOfLoop:
	
	
	if not(found) then
		Add Column TabLeThatWillBeReSavedAsTemp (_rowid integer) from tempAlias set To rowid
	end if
		
	call görTillBasTabell(TabLeThatWillBeReSavedAsTemp)
	Add_rowid = true
end function

sub dedupeIntoTemp(byVal tableNameWhoHasTHe_RowidCOlumn as string, byVal kolumnNamn as string)
'attempts to make a grouping of objects while mainting the ressulting grafic 
'does normaly not work, so the method makes a copy of the table, asignes each row id, 
' then group by provided column namn, and make a new table from original source, where it selects each row
' with the rowid provided when making the select, the geo object is intanct and you could say that the grouping was made witout loss
' it would probably be more correct to call the method, dedupeIntoTemp, as group by could be asumed, that the graphical objects should be merged, 
' this mearly pick one object with each distinguished column value.

	dim tempAlias,tempAlias2 as string
	tempAlias = tableNameWhoHasTHe_RowidCOlumn
	tempAlias2 = kolumnNamn

	call updateIndex(tableNameWhoHasTHe_RowidCOlumn) 'makes sure index is in the table provided

	select * from tableNameWhoHasTHe_RowidCOlumn group by tempAlias2 into tabellUtanGrafik 'makes the object destroying groupBy
	
	call görTillbastabell(tabellUtanGrafik) 'stores result as temporary table and closes original
	
	run command ("select " & getColumnsOfTable_asString(tableNameWhoHasTHe_RowidCOlumn) & 
	" from " & tableNameWhoHasTHe_RowidCOlumn & 
	",tabellUtanGrafik where " & tableNameWhoHasTHe_RowidCOlumn & "._rowid = tabellUtanGrafik._rowid  into withGrafik") 'makes a join of the original table and the new temporary table without objects
	
	call görTillBastabell("withGrafik") 'the ressulting table is stored as a temporary table, and the join is discarded.

	close table tableNameWhoHasTHe_RowidCOlumn 'cleanup
	close table tabellUtanGrafik 'cleanup
	select * from withGrafik into tableNameWhoHasTHe_RowidCOlumn 'renaming ressult table to take the place of initial table
	
	call görTillBastabell("tableNameWhoHasTHe_RowidCOlumn") 'sames the table in new name
	close table withGrafik
	
	run command ("Create Index On " & tableNameWhoHasTHe_RowidCOlumn & "(" & kolumnNamn & ")") 'makes sure that the index now reflect the new item density after deduping.

	commit table tableNameWhoHasTHe_RowidCOlumn

End Sub

sub printToFile(byVal tableName as string,byVal pathString as string)

	Select fastighet,EntryID From tableName Into my_query
	Open file pathString For Output As #1
	Fetch First From my_query
	Do While Not EOT(my_query)'The Write #1 statement will automatically add commas between fields. If you don't want this then use Print #1.
		
	Print #1, "	" & my_query.Col2 & ", " & my_query.Col1
    	
    	Fetch Next From my_query
Loop
Close File #1
End Sub